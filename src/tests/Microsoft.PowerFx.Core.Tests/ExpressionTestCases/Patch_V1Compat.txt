#SETUP: PowerFxV1CompatibilityRules
#SETUP: EnableExpressionChaining,MutationFunctionsTestSetup

>> Patch([1,2], {Value:1}, If(false, {x:1, Value:2}, {Value:11, z:2}))
Errors: Error 24-66: The specified column 'x' does not exist.|Error 6-11: The value passed to the 'Patch' function cannot be changed.|Error 0-67: The function 'Patch' has some invalid arguments.

>> Patch([1,2], If(false, {x:1, Value:2}, {Value:1, z:2}),  {Value:11})
Errors: Error 13-54: The specified column 'x' does not exist.|Error 6-11: The value passed to the 'Patch' function cannot be changed.|Error 0-68: The function 'Patch' has some invalid arguments.

>> Patch([1,2], If(false, {x:1, Value:2}, {Value:1, z:2}),  If(false, {x:1, Value:2}, {Value:11, z:2}))
Errors: Error 13-54: The specified column 'x' does not exist.|Error 57-99: The specified column 'x' does not exist.|Error 6-11: The value passed to the 'Patch' function cannot be changed.|Error 0-100: The function 'Patch' has some invalid arguments.

>> Patch(Table({Value:1}, If(false, {x:1, Value:2}, {Value:2, z:2}), {Value:3}), {Value:2}, {Value:11})
Errors: Error 6-76: The value passed to the 'Patch' function cannot be changed.

>> Collect(t_empty, {Value:1}); Collect(t_empty, {Value:2}); Patch(t_empty, {Value:1}, If(false, {x:1, Value:2}, {Value:11, z:2}))
Errors: Error 84-126: The specified column 'x' does not exist.|Error 58-127: The function 'Patch' has some invalid arguments.

>> Collect(t_empty, {Value:1}); Collect(t_empty, {Value:2}); Patch(t_empty, If(false, {x:1, Value:2}, {Value:1, z:2}),  {Value:11})
Errors: Error 73-114: The specified column 'x' does not exist.|Error 58-128: The function 'Patch' has some invalid arguments.

>> Collect(t_empty, {Value:1}); Collect(t_empty, {Value:2}); Patch(t_empty, If(false, {x:1, Value:2}, {Value:1, z:2}),  If(false, {x:1, Value:2}, {Value:11, z:2}))
Errors: Error 73-114: The specified column 'x' does not exist.|Error 117-159: The specified column 'x' does not exist.|Error 58-160: The function 'Patch' has some invalid arguments.

>> Collect(t_empty, {Value:1}); Collect(t_empty, If(false, {x:1, Value:2}, {Value:2, z:2})); Collect(t_empty, {Value:3}); Patch(t_empty, {Value:2}, {Value:11})
Errors: Error 46-87: The specified column 'x' does not exist.|Error 29-88: The function 'Collect' has some invalid arguments.

// field22 is missing
>> Patch(
     Table(
       {field1:2, field2:{field21:"earth",field22:"venus"}},
       {field1:3, field2:{field21:"moon",field22:"phobos"}}),
     {field2:{field21:"moon"}},
     {field1:7})
Errors: Error 13-143: The value passed to the 'Patch' function cannot be changed.

>> Patch(
     Table(
       {Planet:"earth",Properties:{Color:"blue",Size:"small",Weight:1000,Moon:{Name:"Moon", Color:"Silver"}}},
       {Planet:"Saturn",Properties:{Color:"red-brown",Size:"huge",Weight:99999,Moon:{Name:"Phobos", Color:"yellow"}}}),
    {Properties:{Moon:{Name:"Phobos"}}},
    {Planet:"Jupter"})
Errors: Error 13-251: The value passed to the 'Patch' function cannot be changed.


>> Collect(t1, r2);
  Patch(t1, Last(t1), {Field1:10}, {Field2:"Venus"}, {Field4:true}).Field1
10

>> Collect(t1, r2);
  Collect(t1, {Field1:3,Field2:"venus",Field3:DateTime(2030,1,1,0,0,0,0),Field4:true});
  Collect(t1, {Field1:4,Field2:"mars",Field3:DateTime(2031,1,1,0,0,0,0),Field4:false});
  Collect(t1, {Field1:5,Field2:"jupter",Field3:DateTime(2032,1,1,0,0,0,0),Field4:true});
  Collect(t1, {Field1:6,Field2:"saturn",Field3:DateTime(2033,1,1,0,0,0,0),Field4:false});
  Patch(t1, First(Filter(t1, Field1 > 4)), {Field2: "phobos"});
{Field1:5,Field2:"phobos",Field3:DateTime(2032,1,1,0,0,0,0),Field4:true}

>> Collect(t1, r2);
  Collect(t1, {DisplayNameField1:3,Field2:"venus",Field3:DateTime(2030,1,1,0,0,0,0),DisplayNameField4:true});
  Collect(t1, {DisplayNameField1:4,Field2:"mars",Field3:DateTime(2031,1,1,0,0,0,0),DisplayNameField4:false});
  Collect(t1, {DisplayNameField1:5,Field2:"jupter",Field3:DateTime(2032,1,1,0,0,0,0),DisplayNameField4:true});
  Collect(t1, {DisplayNameField1:6,Field2:"saturn",Field3:DateTime(2033,1,1,0,0,0,0),DisplayNameField4:false});
  Patch(t1, Last(Filter(t1, Field4 = false)), {DisplayNameField2: "phobos"});
{Field1:6,Field2:"phobos",Field3:DateTime(2033,1,1,0,0,0,0),Field4:false}

// Base record not found. If the record in its entirety is not matched then it should produce an error. 
>> Collect(t1,{Field1:3,Field2:"phobos",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
   Collect(t1,{Field1:2,Field2:"deimos",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
   Patch(t1,{Field2:"deimos"},{Field3:DateTime(2030,2,1,0,0,0,0)})
Error({Kind:ErrorKind.NotFound})

>> Collect(t1,{Field1:3,Field2:"phobos",Field3:DateTime(2024,2,1,0,0,0,0),Field4:false});
   Collect(t1,{Field1:2,Field2:"deimos",Field3:DateTime(2025,2,1,0,0,0,0),Field4:false});
   Patch(t1,{Field3:DateTime(2025,2,1,0,0,0,0)},{Field2:"pandora", Field1:55})
Error({Kind:ErrorKind.NotFound})

>> Collect(t1, r2);
   Patch(t1, {Field4:true}, {Field2:"phobos"});
   First(t1).DisplayNameField2
Error({Kind:ErrorKind.NotFound})